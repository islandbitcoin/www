# Nginx configuration for multiple apps on same server
# Lightning-Server (Next.js) and Island Bitcoin (React/Node)

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com lightning.yourdomain.com;
    return 301 https://$server_name$request_uri;
}

# Island Bitcoin - Main domain
server {
    listen 443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Proxy to Island Bitcoin container
    location / {
        proxy_pass http://island-bitcoin:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Lightning Server - Subdomain or separate domain
server {
    listen 443 ssl http2;
    server_name lightning.yourdomain.com;  # Or use a different domain

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/lightning.yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lightning.yourdomain.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Proxy to Lightning Server (assuming it runs on host)
    location / {
        # If Lightning Server runs on host machine (not in Docker)
        proxy_pass http://host.docker.internal:3001;  # Adjust port as needed
        
        # If Lightning Server runs in another Docker container
        # proxy_pass http://lightning-server:3001;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # WebSocket support for Next.js
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }
    
    # Next.js specific paths
    location /_next {
        proxy_pass http://host.docker.internal:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Alternative: Path-based routing (both apps on same domain)
# server {
#     listen 443 ssl http2;
#     server_name yourdomain.com;
#     
#     # ... SSL config ...
#     
#     # Island Bitcoin at root
#     location / {
#         proxy_pass http://island-bitcoin:3000;
#         # ... proxy headers ...
#     }
#     
#     # Lightning Server at /lightning
#     location /lightning {
#         proxy_pass http://host.docker.internal:3001;
#         # ... proxy headers ...
#     }
# }